---
title: "MP01 â€“ Netflix"
author: "Xiaolin Wu"
format:
  html:
    theme: journal
    toc: true
    code-fold: true
    code-copy: true
    title-block-style: default
    title-block-banner: "#e50914"   
    title-block-banner-color: white
editor: visual
---

```{r}
if(!dir.exists(file.path("data", "mp01"))){
  dir.create(file.path("data", "mp01"), recursive = TRUE, showWarnings = FALSE)
}

GLOBAL_TOP_10_FILENAME  <- file.path("data", "mp01", "global_top10_alltime.csv")
COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")

if(!file.exists(GLOBAL_TOP_10_FILENAME)){
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv", 
                destfile = GLOBAL_TOP_10_FILENAME)
}
if(!file.exists(COUNTRY_TOP_10_FILENAME)){
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv", 
                destfile = COUNTRY_TOP_10_FILENAME)
}
```

```{r}
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("janitor"))   install.packages("janitor")
if(!require("gt"))        install.packages("gt")

library(readr)
library(dplyr)
library(janitor)
library(ggplot2)
library(gt)
```

```{r}
GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME, show_col_types = FALSE) |> 
  clean_names() |> 
  mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))

COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME, show_col_types = FALSE) |> 
  clean_names()

cat("Global rows:", nrow(GLOBAL_TOP_10), "  Country rows:", nrow(COUNTRY_TOP_10), "\n")

```

## Initial Data Exploration

In this section, we perform a first exploration of the global Netflix Top 10 dataset. Our goal is to understand the size of the dataset, the distribution of categories, and the diversity of programming represented.

```{r}
# total
total_rows   <- nrow(GLOBAL_TOP_10)
unique_shows <- n_distinct(GLOBAL_TOP_10$show_title)

# category
category_summary <- GLOBAL_TOP_10 %>%
  count(category, sort = TRUE)

category_summary %>%
  gt() %>%
  tab_header(title = "Table 1: Number of Records by Category in Global Top 10") %>%
  tab_style(
    style = cell_fill(color = "#ffe5e5"),
    locations = cells_body(rows = category == "TV (English)")
  )

```

## ***Interpretation:***

The dataset containsÂ **`r total_rows`Â records**Â coveringÂ **`r unique_shows`Â unique shows**. Each of the four categories is evenly represented (English / Non-English TV & Films), ensuring comparability, though real-world popularity may concentrate in fewer titles.

## **Press Release 1: Stranger Things Season 5**

```{r}
stranger_things <- GLOBAL_TOP_10 %>% filter(grepl("Stranger Things", show_title))

total_hours   <- sum(stranger_things$weekly_hours_viewed, na.rm = TRUE)
weeks_in_top10 <- n_distinct(stranger_things$week)

st_countries <- COUNTRY_TOP_10 %>%
  filter(grepl("Stranger Things", show_title)) %>%
  summarise(num_countries = n_distinct(country_name)) %>%
  pull(num_countries)

top_english_tv <- GLOBAL_TOP_10 %>%
  filter(category == "TV (English)") %>%
  group_by(show_title) %>%
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) %>%
  arrange(desc(total_hours)) %>%
  slice(1:5)

```

### ðŸ“¢Â **Netflixâ€™s Global Phenomenon Returns: Stranger Things Prepares for a Historic Final Season**

-   Total hours viewed:Â **`r scales::comma(total_hours)`**

-   Weeks in Top 10:Â **`r weeks_in_top10`**

-   Countries appeared:Â **`r st_countries`**

Compared with other English TV shows (likeÂ *`r top_english_tv$show_title[2]`*Â andÂ *`r top_english_tv$show_title[3]`*), Stranger Things remains one of the strongest titles worldwide.

```{r}
st_data <- stranger_things %>%
  group_by(week) %>%
  summarise(weekly_hours = sum(weekly_hours_viewed, na.rm = TRUE))

ggplot(st_data, aes(x = week, y = weekly_hours/1e6)) +
  geom_line(color = "#e50914", size = 1.2) +
  geom_point(color = "#e50914") +
  labs(title = "Stranger Things Global Viewership Trend",
       x = "Week", y = "Weekly Hours Viewed (Millions)") +
  theme_minimal()

```

## **Press Release 2: Netflixâ€™s Blockbuster Growth in India**

```{r}
india_top <- COUNTRY_TOP_10 %>% filter(country_name == "India")
us_top    <- COUNTRY_TOP_10 %>% filter(country_name == "United States")

india_hours <- GLOBAL_TOP_10 %>% 
  filter(show_title %in% india_top$show_title) %>% 
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) %>% 
  pull(total_hours)

india_shows <- n_distinct(india_top$show_title)
india_unique <- setdiff(india_top$show_title, us_top$show_title)

```

### ðŸ“¢ **Netflix Celebrates Record-Breaking Hindi Hits and Rapid Subscriber Growth in the Worldâ€™s Largest Market**

-   Total Hindi content hours:Â **`r scales::comma(india_hours)`**

-   Unique Indian shows in Top 10:Â **`r india_shows`**

-   Local-only hits:Â *`r india_unique[1]`*,Â *`r india_unique[2]`*

```{r}
india_top10 <- india_top %>%
  group_by(show_title) %>%
  summarise(weeks_in_top10 = n_distinct(week)) %>%
  arrange(desc(weeks_in_top10)) %>%
  slice(1:10)

ggplot(india_top10, aes(x = reorder(show_title, weeks_in_top10), y = weeks_in_top10)) +
  geom_col(fill = "#E50914") +
  coord_flip() +
  theme_minimal() +
  labs(title = "Top 10 Netflix Shows in India (Weeks in Top 10)", x = "Show", y = "Weeks")

```

## **Press Release 3: Netflixâ€™s Global Non-English TV Success**

```{r}
non_english_tv <- GLOBAL_TOP_10 %>% filter(category == "TV (Non-English)")

non_eng_hours <- sum(non_english_tv$weekly_hours_viewed, na.rm = TRUE)
non_eng_shows <- n_distinct(non_english_tv$show_title)

top_non_eng <- non_english_tv %>%
  group_by(show_title) %>%
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
            total_weeks = n_distinct(week)) %>%
  arrange(desc(total_hours)) %>%
  slice(1:5)

```

### ðŸ“¢ **From Seoul to Madrid: Non-English Originals Reshape Netflixâ€™s Global Top 10**

-   Non-English hours viewed:Â **`r scales::comma(non_eng_hours)`**

-   Unique Non-English shows:Â **`r non_eng_shows`**

-   Breakout titles:Â *`r top_non_eng$show_title[1]`*,Â *`r top_non_eng$show_title[2]`*

```{r}
tv_compare <- GLOBAL_TOP_10 %>%
  filter(category %in% c("TV (English)", "TV (Non-English)")) %>%
  group_by(category) %>%
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE))

ggplot(tv_compare, aes(x = category, y = total_hours/1e9, fill = category)) +
  geom_col(show.legend = FALSE) +
  scale_fill_manual(values = c("#e50914", "#221f1f")) +
  labs(title = "English vs Non-English TV (Billions of Hours)",
       x = "", y = "Total Hours (Billions)") +
  theme_minimal()

```
